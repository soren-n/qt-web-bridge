name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    - name: Set up virtual display (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

    - name: Install dependencies
      run: |
        echo "=== Installing dependencies ==="
        uv sync --group dev
        echo "=== Verifying installation ==="
        uv list | grep ruff || echo "Ruff not found in installation"

    - name: Debug environment
      run: |
        echo "=== Environment Info ==="
        echo "OS: ${{ runner.os }}"
        echo "Python: ${{ matrix.python-version }}"
        uv run ruff --version || echo "Ruff not available"
        echo "=== Dependency versions ==="
        uv run python -c "import sys; print(f'Python: {sys.version}')"

    - name: Run linting
      run: |
        echo "=== Running ruff check ==="
        uv run ruff check . --verbose
        echo "=== Running ruff format check ==="
        uv run ruff format --check . --verbose

    - name: Fix import issues if needed (CI environment)
      if: failure()
      run: |
        echo "=== Attempting to fix import issues ==="
        uv run ruff check . --fix --verbose
        echo "=== Re-running checks after fix ==="
        uv run ruff check . --verbose
        uv run ruff format --check . --verbose

    - name: Run type checking
      run: |
        uv run mypy src/

    - name: Run tests
      run: |
        uv run pytest tests/test_bridge.py --verbose --timeout=120
      env:
        QT_QPA_PLATFORM: offscreen
        DISPLAY: :99
        CI: true

    - name: Run utility tests
      run: |
        uv run pytest tests/test_utils.py --verbose --timeout=60
      env:
        QT_QPA_PLATFORM: offscreen
        DISPLAY: :99
        CI: true

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    - name: Install build dependencies
      run: |
        uv sync --group dev

    - name: Build package
      run: |
        uv run python -m build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v5
      with:
        name: dist
        path: dist/
        retention-days: 7
