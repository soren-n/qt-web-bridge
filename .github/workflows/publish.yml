name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual triggering
  workflow_call:      # Allow calling from other workflows
    inputs:
      released:
        description: 'Whether a release was created'
        required: false
        type: string
        default: 'false'
      version:
        description: 'The version that was released'
        required: false
        type: string
        default: ''
      tag:
        description: 'The tag that was created'
        required: false
        type: string
        default: ''

permissions:
  contents: read

jobs:
  debug-inputs:
    runs-on: ubuntu-latest
    steps:
    - name: Debug workflow inputs and context
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Released input: '${{ inputs.released }}'"
        echo "Version input: '${{ inputs.version }}'"
        echo "Tag input: '${{ inputs.tag }}'"
        echo "TestPyPI condition check:"
        echo "  workflow_dispatch: ${{ github.event_name == 'workflow_dispatch' }}"
        echo "  released input: ${{ inputs.released == 'true' }}"
        echo "  tag ref: ${{ startsWith(github.ref, 'refs/tags/v') }}"
        echo "Overall condition: ${{ github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v') || inputs.released == 'true' }}"

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    - name: Set up virtual display and Qt dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-xinerama0 libxcb-cursor0 libxcb-shape0 libxcb-randr0 libegl1 libegl-dev libgl1-mesa-dri libglib2.0-0 libdbus-1-3
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 2  # Give Xvfb time to start

    - name: Install dependencies
      run: |
        uv sync --group dev

    - name: Run quality checks
      run: |
        uv run ruff check .
        uv run ruff format --check .
        uv run mypy src/

    - name: Run tests
      run: |
        echo "=== Running all tests ==="
        uv run pytest tests/ --timeout=120 -v
      env:
        QT_QPA_PLATFORM: offscreen
        DISPLAY: :99
        CI: true
        QT_LOGGING_RULES: "*.debug=false"

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        enable-cache: true

    - name: Install build dependencies
      run: |
        uv sync --group dev

    - name: Build package
      run: |
        uv run python -m build

    - name: Check package
      run: |
        uv run twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-testpypi:
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/v') || inputs.released == 'true'  # Manual trigger, tag push, or successful release call
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: testpypi
      url: https://test.pypi.org/p/soren-n-qt-web-bridge
    permissions:
      id-token: write

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    if: startsWith(github.ref, 'refs/tags/v') || inputs.released == 'true'  # On version tags or successful release call
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: pypi
      url: https://pypi.org/p/soren-n-qt-web-bridge
    permissions:
      id-token: write

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
