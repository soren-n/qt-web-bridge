[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qt-webview-bridge"
version = "0.1.0"
description = "Clean Qt WebView widgets for hosting modern web UIs without styling conflicts"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["qt", "webview", "bridge", "javascript", "pyside6", "qtpy"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
]
dependencies = [
    "qtpy>=2.0.0",
    # Qt implementation will be provided by user
    # Common options: PySide6, PyQt6, PySide2, PyQt5
]
requires-python = ">=3.11"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-qt>=4.0",
    "black>=22.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pre-commit>=3.0.0",
    "PySide6>=6.0",  # For development/testing
]
examples = [
    "PySide6>=6.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/qt-webview-bridge"
Repository = "https://github.com/yourusername/qt-webview-bridge.git"
Issues = "https://github.com/yourusername/qt-webview-bridge/issues"
Documentation = "https://qt-webview-bridge.readthedocs.io/"

[tool.hatch.build.targets.wheel]
packages = ["src/qt_webview_bridge"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/examples",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B011"]  # allow assert False in tests

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "qtpy.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --tb=short"
qt_api = "pyside6"